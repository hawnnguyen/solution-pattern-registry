type Tag {
    tagId: ID!
    tagName: String!
    tagValue: String!
    className: String
    patternId: String
}

type Pattern {
    id: ID!
    name: String!
    description: String!
    quadrant: String!
    ring: String!
    phase: String!
    status: String!
    tags: [Tag]
}

input TagInput {
    tagName: String!
    tagValue: String!
    className: String
}

input PatternInput {
    name: String!
    description: String!
    quadrant: String!
    ring: String!
    phase: String!
    status: String!
}

type Query {
    patterns: [Pattern]!
    patternById(id: ID!): Pattern
    patternsByQuadrant(quadrant: String!): [Pattern]!
    patternsByRing(ring: String!): [Pattern]!
    patternsByPhase(phase: String!): [Pattern]!
    patternsByStatus(status: String!): [Pattern]!
}

type Mutation {
    createPattern(pattern: PatternInput!): Pattern!
    updatePattern(id: ID!, pattern: PatternInput!): Pattern!
    deletePattern(id: ID!): Boolean!
    createTag(patternId: ID!, tag: TagInput!): Tag!
    deleteTag(tagId: ID!): Boolean!
}
